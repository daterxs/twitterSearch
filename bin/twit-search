#!/usr/bin/env node
const program = require('commander');
const Twit = require('../');
const StoreService = require('../lib/storeService');
const geocodes = require('../lib/geocodes');
const config = require('../lib/config');

program
  .option('-w --words [words]', 'List of words to search')
  .option('-g --geocode [geocode]', 'Coordinates to sarch by location')
  .option('-s --since [since]', 'From wich date look. Format YYYY-MM-DD')
  .option('-u --until [until]', 'Until wich date look. Format YYYY-MM-DD')
  .option('-t --type [type]', 'result_type: mixed, recent, popular')
  .option('-l --lang [lang]', 'lang: es, en, fr, pr, etc')
  .option('-i --id-max [maxId]', 'Start from this id')
  .option('-o --output [filepath]', 'Dir where store store_#.json files')
  .option('-m --mongodb [mongourl]', 'Save tweets on mongodb')
  .parse(process.argv);

const params = {};
let store;

if (program.words) params.q = program.words;
if (program.geocode) params.geocode = geocodes.get(program.geocode);
if (program.since) params.since = program.since;
if (program.lang) params.lang = program.lang;
if (program.type) params.result_type = program.type;
if (program.until) params.until = program.until;

console.log(params);
const app = new Twit(config);


if (program.mongodb) {
  config.set('store.mongodb.url', program.mongodb);
  store = new StoreService(config);
  app.setStore(store.saveDB);
} else if (program.output) {
  config.set('store.fs.path', program.output);
}

if (params) {
  app.registerEventListener('searchTwits', data => console.log(`${data[0].text}`));
  app.search(params);
}
